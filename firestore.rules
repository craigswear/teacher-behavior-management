rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to fetch a user's role and schoolId from their 'users' document
    function getUserData(uid) {
      return get(/databases/$(database)/documents/users/$(uid));
    }

    // --- Rules for 'users' collection ---
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'schoolAdmin' && getUserData(request.auth.uid).data.schoolId == resource.data.schoolId) ||
        (getUserData(request.auth.uid).data.role == 'teacher' && getUserData(request.auth.uid).data.schoolId == resource.data.schoolId)
      );
      allow create: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'schoolAdmin' && request.resource.data.role == 'teacher' && request.resource.data.schoolId == getUserData(request.auth.uid).data.schoolId)
      );
      allow update: if request.auth != null && (
        request.auth.uid == userId ||
        getUserData(request.auth.uid).data.role == 'superAdmin'
      );
      allow delete: if false; // Deletion is typically handled via Cloud Functions or denied
    }

    // --- Rules for 'schools' collection ---
    match /schools/{schoolId} {
      allow read: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'schoolAdmin' && getUserData(request.auth.uid).data.schoolId == schoolId) ||
        (getUserData(request.auth.uid).data.role == 'teacher' && getUserData(request.auth.uid).data.schoolId == schoolId)
      );
      allow write: if request.auth != null && getUserData(request.auth.uid).data.role == 'superAdmin';
    }

    // --- Rules for 'students' collection ---
    match /students/{studentId} {
      allow read: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'schoolAdmin' && resource.data.schoolId == getUserData(request.auth.uid).data.schoolId) ||
        (getUserData(request.auth.uid).data.role == 'teacher' && resource.data.schoolId == getUserData(request.auth.uid).data.schoolId)
      );
      allow create: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'schoolAdmin' && request.resource.data.schoolId == getUserData(request.auth.uid).data.schoolId)
      );
      allow update: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'schoolAdmin' && resource.data.schoolId == getUserData(request.auth.uid).data.schoolId) ||
        (getUserData(request.auth.uid).data.role == 'teacher' && resource.data.schoolId == getUserData(request.auth.uid).data.schoolId && request.resource.data.keys().hasAll(['totalEarnedPoints', 'totalPossiblePoints', 'dailyPercentage', 'isSuccessfulDay', 'levelAtTimeOfReport', 'updatedStudentLevel', 'updatedStudentDaysInCurrentLevel']))
      ); // Teacher can update specific fields via point sheet processing
      allow delete: if false;

      // --- Rules for 'dailyPointSheets' subcollection ---
      match /dailyPointSheets/{pointSheetId} {
        allow create, read: if request.auth != null && (
          getUserData(request.auth.uid).data.role == 'superAdmin' ||
          (getUserData(request.auth.uid).data.role == 'schoolAdmin' && resource.data.schoolId == getUserData(request.auth.uid).data.schoolId) ||
          (getUserData(request.auth.uid).data.role == 'teacher' && resource.data.schoolId == getUserData(request.auth.uid).data.schoolId)
        );
        allow update, delete: if false;
      }
    }

    // --- NEW: Rules for 'classes' collection ---
    match /classes/{classId} {
      allow read: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'schoolAdmin' && resource.data.schoolId == getUserData(request.auth.uid).data.schoolId) ||
        (getUserData(request.auth.uid).data.role == 'teacher' && resource.data.teacherUid == request.auth.uid)
      );
      allow create: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'teacher' && request.resource.data.teacherUid == request.auth.uid && request.resource.data.schoolId == getUserData(request.auth.uid).data.schoolId)
      );
      allow update: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'teacher' && resource.data.teacherUid == request.auth.uid)
      );
      allow delete: if request.auth != null && (
        getUserData(request.auth.uid).data.role == 'superAdmin' ||
        (getUserData(request.auth.uid).data.role == 'teacher' && resource.data.teacherUid == request.auth.uid)
      );
    }

    // Default: Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
