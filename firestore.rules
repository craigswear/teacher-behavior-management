rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get a user's role and schoolId
    function getUserData(uid) {
      // Temporarily debug what getUserData returns
      return debug(get(/databases/$(database)/documents/users/$(uid)));
    }

    // --- Users Collection Rules (TEMPORARILY LOOSENED FOR AUTHENTICATED READ) ---
    match /users/{userId} {
      // Temporarily allow any authenticated user to read ANY user document.
      // This bypasses the role and schoolId checks for reading user documents.
      allow read: if request.auth != null;

      // Other rules remain the same (create, update, delete)
      allow create: if request.auth != null && (
        getUserData(request.auth.uid).role == 'superAdmin' ||
        (getUserData(request.auth.uid).role == 'schoolAdmin' && request.resource.data.role == 'teacher' && request.resource.data.schoolId == getUserData(request.auth.uid).schoolId)
      );
      allow update: if request.auth != null && (
        request.auth.uid == userId ||
        getUserData(request.auth.uid).role == 'superAdmin'
      );
      allow delete: if false;
    }

    // --- Schools Collection Rules (TEMPORARILY LOOSENED FOR AUTHENTICATED READ) ---
    match /schools/{schoolId} {
      // Temporarily allow any authenticated user to read ANY school document.
      // This bypasses the role and schoolId checks for reading school documents.
      allow read: if request.auth != null;

      // Other rules remain the same (write)
      allow write: if request.auth != null && getUserData(request.auth.uid).role == 'superAdmin';
    }

    // --- Default/Catch-all (deny all other access by default) ---
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
